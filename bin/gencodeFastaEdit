#!/usr/bin/env python3

import argparse
from pycbio.sys import fileOps
from Bio import SeqIO


def parseArgs():
    usage = """fix ids in GENCODE fasta headers and drop PAR_Y transcripts, optionally filter"""
    parser = argparse.ArgumentParser(description=usage)
    parser.add_argument('--ids'),
    parser.add_argument('inFa')
    parser.add_argument('outFa')
    return parser.parse_args()

def useRec(transId, idSet):
    return (((idSet is None) or (transId in idSet)) and (transId.find("_PAR_Y") < 0))

def processRec(faRec, idSet, outFh):
    faRec.id = faRec.id.split('|')[0]
    if useRec(faRec.id, idSet):
        SeqIO.write(faRec, outFh, "fasta")

def main(args):
    idSet = None
    if args.ids is not None:
        idSet = set([l.strip() for l in fileOps.iterLines(args.ids)])
    with fileOps.opengz(args.inFa) as inFh:
        with fileOps.opengz(args.outFa, "w") as outFh:
            for faRec in SeqIO.parse(inFh, "fasta"):
                processRec(faRec, idSet, outFh)

main(parseArgs())
